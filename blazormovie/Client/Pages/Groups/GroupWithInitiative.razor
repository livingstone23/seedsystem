@inject ISnackbar Snackbar
@inject IInitiativeService InitiativeService

<MudDialog>
    <TitleContent>
        Initiatives
    </TitleContent>
<DialogContent>
    <EditForm Model="@initiative">
        <div class="row">  
                            
            <div class="col-md-8">
                <label for="">Work Teams</label>
        
                <InputSelect class="form-control" 
                                Value="@initiative.Id"
                                ValueChanged="@((int id)=> GroupHasChanged(id))"
                                ValueExpression="@(() => initiative.Id)"
                >
                    @foreach (var item in Initiatives)
                    {
                        <option value ="@item.Id">@item.Name</option>    
                    }
                </InputSelect>
        
            </div>
        </div>
    </EditForm>
</DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="AddInitiative">Add</MudButton>
    </DialogActions>
</MudDialog>


@code {
    Initiative initiative = new Initiative();
    public string Message { get; set; }
    public IEnumerable<Initiative> Initiatives = new List<Initiative>();
    [CascadingParameter] 
    MudDialogInstance MudDialog {get;set;}
    protected async override Task OnInitializedAsync()
    {
        try
        {
            Initiatives = await InitiativeService.GetInitiatives();
            initiative = Initiatives.FirstOrDefault();

        }
        catch (Exception ex)
        {
            Message = "Error" + ex.Message;
        }
    }

      private void Cancel()
    {
        MudDialog.Cancel();
    }
    protected async Task GroupHasChanged(int initiativeId)
    {

        if (initiativeId > 0)
            initiative =    await InitiativeService.GetById(initiativeId);
    } 
    private void AddInitiative()
    {
        Snackbar.Add("Group added1", Severity.Success, a => a.VisibleStateDuration = 200);
        MudDialog.Close(DialogResult.Ok(initiative));
    }

}
